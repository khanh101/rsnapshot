#!/bin/bash

# Create time-stamped backups locally or on a remote host

target=$1
backup_target=$2
[ $3 ] && remote_port=$3 || remote_port=22
init_backup="`dirname $0`/rbackup-init-backup.sh"
config=".rbackup"

if [ ! $target ] || [ ! $backup_target ] || [ ! -e "$target" ]; then
  echo "Usage: rbackup /my/files [user@host:]/my/backups [remote port]"
  exit 1
fi

# Initialize local backup
if [ -e "$backup_target" ]; then
  backup_destination="$backup_target/"
  cd "$backup_target"
  sh $init_backup

# Initialize remote backup
else
  # Parse remote host and path
  if [[ "$backup_target" != *:* ]]; then
    backup_target="$backup_target:"
  fi
  remote_host_and_user=${backup_target%:*}
  remote_host=${remote_host_and_user#*@}
  remote_dir=${backup_target#*:}

  # Die if remote host is not reachable
  nc -z -w 1 $remote_host $remote_port || { echo "$remote_host could not be reached"; exit 1; }

  # Initialize backup
  ssh $remote_host_and_user -p $remote_port "cd \"$remote_dir\"; `cat $init_backup`"
  if [ $remote_dir ]; then
    backup_destination="$remote_host_and_user:$remote_dir/"
  else
    backup_destination="$remote_host_and_user:"
  fi
fi

# Go to the backup target
cd "$target"

# Load config
if [ -f "$config/exclude" ]; then
  exclude="--exclude-from=$config/exclude"
fi
if [ -f "$config/include" ]; then
  include="--include-from=$config/include"
fi

# Sync away!
rsync -e "ssh -p $remote_port" -avz --hard-links --link-dest="../previous" $include $exclude . "$backup_destination""latest"
